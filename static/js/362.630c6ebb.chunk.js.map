{"version":3,"file":"static/js/362.630c6ebb.chunk.js","mappings":"6LACA,EAAsB,oBAAtB,EAA+F,qBAA/F,EAA4H,sBAA5H,EAA+L,qB,oECSzLA,EAAW,CACf,CAAEC,KAAM,OAAQC,KAAM,QACtB,CAAED,KAAM,UAAWC,KAAM,YACzB,CAAED,KAAM,SAAUC,KAAM,UACxB,CAAED,KAAM,SAAUC,KAAM,WAGpBC,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wnBA+Fb,EAhEe,WA0Bb,OAzBAE,SAASC,iBAAiB,oBAAoB,YAErB,WAErB,IAEIC,EAFEC,EAASH,SAASI,cAAc,UAClCC,EAAaC,OAAOC,YAExBD,OAAOL,iBAAiB,UAAU,WAGhC,IAAMO,EAAe,kBAAML,EAAOM,UAAUC,SAAS,gBAAhC,GADrBR,EAAgBI,OAAOC,aAEHF,IAAeG,KAEjCL,EAAOM,UAAUE,IAAI,iBAEnBT,EAAgBG,GAAcG,KAEhCL,EAAOM,UAAUG,OAAO,iBAE1BP,EAAaH,CACd,GACF,CACDW,EACD,KAGC,oBAAQC,UAAWC,EAAnB,WACE,gBAAKD,UAAWC,EAAhB,UACE,SAAC,KAAD,CAASC,GAAG,IAAZ,UACE,gCACE,mBACEC,QAAO,UAAKC,EAAL,mCACDC,EADC,OAEPC,KAAK,YACLC,MAAM,yBAER,gBAAKC,IAAKH,EAAYI,IAAI,OAAOC,QAAQ,iBAK/C,gBAAKV,UAAWC,EAAhB,SACGrB,EAAS+B,KAAI,gBAAG9B,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACZ,SAACC,EAAD,CAASmB,GAAIrB,EAAb,SACGC,GADqBD,EADZ,OAMhB,iBAAKmB,UAAWC,EAAhB,WACE,cAAGpB,KAAK,SAAR,UACE,SAAC,MAAD,CAAiB+B,KAAM,cAEzB,cAAG/B,KAAK,SAAR,UACE,SAAC,MAAD,CAA0B+B,KAAM,cAElC,cAAG/B,KAAK,SAAR,UACE,SAAC,MAAD,CAAkB+B,KAAM,kBAKjC,EC7GD,GAAgB,IAAM,qB,mBCAtB,EAAyB,uBCMzB,IAWA,EAXe,WACb,OACE,iBAAKZ,UAAWC,EAAAA,IAAhB,WACE,SAAC,EAAD,KACA,SAAC,EAAAY,SAAD,CAAUC,UCNZ,gBAAKd,UAAWC,EAAhB,UACE,SAAC,IAAD,CAAac,MAAM,cDKnB,UACE,SAAC,KAAD,CAAQf,UAAWC,EAAAA,WAI1B,EEPD,EAPmB,WACjB,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["webpack://mbox-movie/./src/components/AppBar/AppBar.module.scss?4408","components/AppBar/AppBar.jsx","webpack://mbox-movie/./src/components/Layout/Layout.module.scss?ba76","webpack://mbox-movie/./src/components/Loader/Loader.module.scss?a435","components/Layout/Layout.jsx","components/Loader/Loader.jsx","pages/Layout/LayoutPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"AppBar_box__AdkTS\",\"header_hidden\":\"AppBar_header_hidden__JolBw\",\"logo\":\"AppBar_logo__WsC7u\",\"icons\":\"AppBar_icons__wfQzB\",\"icon-size\":\"AppBar_icon-size__cVHsM\",\"text\":\"AppBar_text__IK51W\"};","import css from './AppBar.module.scss';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { IoMdNotificationsOutline } from 'react-icons/io';\nimport { AiOutlineUserAdd } from 'react-icons/ai';\n\nimport logoDesk1x from '../../assets/images/LogoDesk@1x.png';\nimport logoDesk2x from '../../assets/images/LogoDesk@2x.png';\n\nconst navItems = [\n  { href: 'home', text: 'Home' },\n  { href: 'tvshows', text: 'TV Shows' },\n  { href: 'movies', text: 'Movies' },\n  { href: 'series', text: 'Series' },\n];\n\nconst NavItem = styled(NavLink)`\n  color: #ffffff;\n  opacity: 0.5;\n  text-decoration: none;\n  font-family: 'Mulish';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 20px;\n  &.active {\n    color: #ffffff;\n    opacity: 1;\n    position: relative;\n    &::after {\n      content: '';\n      height: 2px;\n      width: 100%;\n      background: linear-gradient(316.53deg, #26fff2 13.2%, #326cff 71.54%);\n      position: absolute;\n      left: calc(50% - 50%);\n      bottom: -5px;\n      border-radius: 50px;\n    }\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #ffffff;\n  }\n`;\n\nconst AppBar = () => {\n  document.addEventListener('DOMContentLoaded', () => {\n    // DOM готов к взаимодейтсвию\n    const onScrollHeader = () => {\n      // объявляем основную функцию onScrollHeader\n      const header = document.querySelector('header'); // находим header и записываем в константу\n      let prevScroll = window.pageYOffset; // узнаем на сколько была прокручена страница ранее\n      let currentScroll; // на сколько прокручена страница сейчас (пока нет значения)\n      window.addEventListener('scroll', () => {\n        // при прокрутке страницы\n        currentScroll = window.pageYOffset; // узнаем на сколько прокрутили страницу\n        const headerHidden = () => header.classList.contains('header_hidden'); // узнаем скрыт header или нет\n        if (currentScroll > prevScroll && !headerHidden()) {\n          // если прокручиваем страницу вниз и header не скрыт\n          header.classList.add('header_hidden'); // то скрываем header\n        }\n        if (currentScroll < prevScroll && headerHidden()) {\n          // если прокручиваем страницу вверх и header скрыт\n          header.classList.remove('header_hidden'); // то отображаем header\n        }\n        prevScroll = currentScroll; // записываем на сколько прокручена страница на данный момент\n      });\n    };\n    onScrollHeader(); // вызываем основную функцию onScrollHeader\n  });\n\n  return (\n    <header className={css.box}>\n      <div className={css.logo}>\n        <NavLink to=\"/\">\n          <picture>\n            <source\n              srcsset={`${logoDesk1x} 1x,\n                  ${logoDesk2x} 2x`}\n              type=\"image/png\"\n              media=\"(min-width: 1280px)\"\n            />\n            <img src={logoDesk2x} alt=\"logo\" loading=\"lazy\" />\n          </picture>\n        </NavLink>\n      </div>\n\n      <div className={css.text}>\n        {navItems.map(({ href, text }) => (\n          <NavItem to={href} key={href}>\n            {text}\n          </NavItem>\n        ))}\n      </div>\n      <div className={css.icons}>\n        <a href=\"search\">\n          <AiOutlineSearch size={'1.14em'} />\n        </a>\n        <a href=\"search\">\n          <IoMdNotificationsOutline size={'1.14em'} />\n        </a>\n        <a href=\"search\">\n          <AiOutlineUserAdd size={'1.14em'} />\n        </a>\n      </div>\n    </header>\n  );\n};\n\nexport default AppBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Layout_box__cgq-i\"};","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__DwtSp\"};","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport AppBar from '../AppBar/AppBar';\nimport css from './Layout.module.scss';\nimport LoadingComponent from '../Loader/Loader';\n\nconst Layout = () => {\n  return (\n    <div className={css.box}>\n      <AppBar />\n      <Suspense fallback={LoadingComponent()}>\n        <Outlet className={css.main} />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Layout;\n","import PulseLoader from 'react-spinners/ClipLoader';\nimport css from './Loader.module.scss';\n\nexport default function LoadingComponent() {\n  return (\n    <div className={css.loader}>\n      <PulseLoader color=\"#326CFF\" />\n    </div>\n  );\n}\n","import Layout from '../../components/Layout/Layout';\n\nconst LayoutPage = () => {\n  return (\n    <>\n      <Layout />\n    </>\n  );\n};\nexport default LayoutPage;\n"],"names":["navItems","href","text","NavItem","styled","NavLink","document","addEventListener","currentScroll","header","querySelector","prevScroll","window","pageYOffset","headerHidden","classList","contains","add","remove","onScrollHeader","className","css","to","srcsset","logoDesk1x","logoDesk2x","type","media","src","alt","loading","map","size","Suspense","fallback","color"],"sourceRoot":""}